
// DO NOT EDIT THIS FILE DIRECTLY!
// This file was automatically generated via ./scripts/generate-generic-element-interface.ts

/// <reference lib="ESNext" />
/// <reference lib="DOM" />
/// <reference lib="DOM.Iterable" />
/// <reference lib="DOM.AsyncIterable" />

declare namespace WinzigInternals {
	interface WinzigGenericElement extends HTMLElement {
		/** @deprecated Valid for {@link HTMLBodyElement|`HTMLBodyElement`}. */
		aLink: string;
		/** Valid for {@link HTMLTableCellElement|`HTMLTableCellElement`}. */
		abbr: string;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}. */
		accept: string;
		/** Valid for {@link HTMLFormElement|`HTMLFormElement`}. */
		acceptCharset: string;
		/** Valid for {@link HTMLFormElement|`HTMLFormElement`}. */
		action: string;
		/** @deprecated Valid for {@link HTMLDivElement|`HTMLDivElement`}, {@link HTMLEmbedElement|`HTMLEmbedElement`}, {@link HTMLHRElement|`HTMLHRElement`}, {@link HTMLHeadingElement|`HTMLHeadingElement`}, {@link HTMLIFrameElement|`HTMLIFrameElement`}, {@link HTMLImageElement|`HTMLImageElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLLegendElement|`HTMLLegendElement`}, {@link HTMLObjectElement|`HTMLObjectElement`}, {@link HTMLParagraphElement|`HTMLParagraphElement`}, {@link HTMLTableCaptionElement|`HTMLTableCaptionElement`}, {@link HTMLTableCellElement|`HTMLTableCellElement`}, {@link HTMLTableColElement|`HTMLTableColElement`}, {@link HTMLTableElement|`HTMLTableElement`}, {@link HTMLTableRowElement|`HTMLTableRowElement`} and {@link HTMLTableSectionElement|`HTMLTableSectionElement`}. */
		align: string;
		/** Valid for {@link HTMLIFrameElement|`HTMLIFrameElement`}. */
		allow: string;
		/** Valid for {@link HTMLIFrameElement|`HTMLIFrameElement`}. */
		allowFullscreen: boolean;
		/** Valid for {@link HTMLAreaElement|`HTMLAreaElement`}, {@link HTMLImageElement|`HTMLImageElement`} and {@link HTMLInputElement|`HTMLInputElement`}. */
		alt: string;
		/** @deprecated Valid for {@link HTMLObjectElement|`HTMLObjectElement`}. */
		archive: string;
		/** Valid for {@link HTMLMapElement|`HTMLMapElement`}. */
		readonly areas: HTMLCollection;
		/** Valid for {@link HTMLLinkElement|`HTMLLinkElement`}. */
		as: string;
		/** Valid for {@link HTMLScriptElement|`HTMLScriptElement`}. */
		async: boolean;
		/** Valid for {@link HTMLFormElement|`HTMLFormElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLSelectElement|`HTMLSelectElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		autocomplete: AutoFillBase | AutoFill;
		/** Valid for {@link HTMLOrSVGElement|`HTMLOrSVGElement`}. */
		autofocus: boolean;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		autoplay: boolean;
		/** @deprecated Valid for {@link HTMLTableCellElement|`HTMLTableCellElement`}. */
		axis: string;
		/** @deprecated Valid for {@link HTMLBodyElement|`HTMLBodyElement`}. */
		background: string;
		/** @deprecated Valid for {@link HTMLBodyElement|`HTMLBodyElement`}, {@link HTMLTableCellElement|`HTMLTableCellElement`}, {@link HTMLTableElement|`HTMLTableElement`} and {@link HTMLTableRowElement|`HTMLTableRowElement`}. */
		bgColor: string;
		/** @deprecated Valid for {@link HTMLImageElement|`HTMLImageElement`}, {@link HTMLObjectElement|`HTMLObjectElement`} and {@link HTMLTableElement|`HTMLTableElement`}. */
		border: string;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		readonly buffered: TimeRanges;
		/** Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		caption: HTMLTableCaptionElement | null;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}. */
		capture: string;
		/** Valid for {@link HTMLTableCellElement|`HTMLTableCellElement`}. */
		readonly cellIndex: number;
		/** @deprecated Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		cellPadding: string;
		/** @deprecated Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		cellSpacing: string;
		/** Valid for {@link HTMLTableRowElement|`HTMLTableRowElement`}. */
		readonly cells: HTMLCollectionOf<HTMLTableCellElement>;
		/** @deprecated Valid for {@link HTMLTableCellElement|`HTMLTableCellElement`}, {@link HTMLTableColElement|`HTMLTableColElement`}, {@link HTMLTableRowElement|`HTMLTableRowElement`} and {@link HTMLTableSectionElement|`HTMLTableSectionElement`}. */
		ch: string;
		/** @deprecated Valid for {@link HTMLTableCellElement|`HTMLTableCellElement`}, {@link HTMLTableColElement|`HTMLTableColElement`}, {@link HTMLTableRowElement|`HTMLTableRowElement`} and {@link HTMLTableSectionElement|`HTMLTableSectionElement`}. */
		chOff: string;
		/** @deprecated Valid for {@link HTMLAnchorElement|`HTMLAnchorElement`}, {@link HTMLLinkElement|`HTMLLinkElement`} and {@link HTMLScriptElement|`HTMLScriptElement`}. */
		charset: string;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}. */
		checked: boolean;
		/** Valid for {@link HTMLModElement|`HTMLModElement`} and {@link HTMLQuoteElement|`HTMLQuoteElement`}. */
		cite: string;
		/** @deprecated Valid for {@link HTMLBRElement|`HTMLBRElement`}. */
		clear: string;
		/** @deprecated Valid for {@link HTMLObjectElement|`HTMLObjectElement`}. */
		code: string;
		/** @deprecated Valid for {@link HTMLObjectElement|`HTMLObjectElement`}. */
		codeBase: string;
		/** @deprecated Valid for {@link HTMLObjectElement|`HTMLObjectElement`}. */
		codeType: string;
		/** Valid for {@link HTMLTableCellElement|`HTMLTableCellElement`}. */
		colSpan: number;
		/** @deprecated Valid for {@link HTMLHRElement|`HTMLHRElement`}. */
		color: string;
		/** Valid for {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		cols: number;
		/** @deprecated Valid for {@link HTMLDListElement|`HTMLDListElement`}, {@link HTMLMenuElement|`HTMLMenuElement`}, {@link HTMLOListElement|`HTMLOListElement`} and {@link HTMLUListElement|`HTMLUListElement`}. */
		compact: boolean;
		/** Valid for {@link HTMLImageElement|`HTMLImageElement`}. */
		readonly complete: boolean;
		/** Valid for {@link HTMLMetaElement|`HTMLMetaElement`} and {@link HTMLTemplateElement|`HTMLTemplateElement`}. */
		content: DocumentFragment | (string & {});
		/** Valid for {@link HTMLIFrameElement|`HTMLIFrameElement`} and {@link HTMLObjectElement|`HTMLObjectElement`}. */
		readonly contentDocument: Document | null;
		/** Valid for {@link HTMLIFrameElement|`HTMLIFrameElement`} and {@link HTMLObjectElement|`HTMLObjectElement`}. */
		readonly contentWindow: WindowProxy | null;
		/** Valid for {@link HTMLLabelElement|`HTMLLabelElement`}. */
		readonly control: HTMLElement | null;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		controls: boolean;
		/** Valid for {@link HTMLAnchorElement|`HTMLAnchorElement`} and {@link HTMLAreaElement|`HTMLAreaElement`}. */
		coords: string;
		/** Valid for {@link HTMLImageElement|`HTMLImageElement`}, {@link HTMLLinkElement|`HTMLLinkElement`}, {@link HTMLMediaElement|`HTMLMediaElement`} and {@link HTMLScriptElement|`HTMLScriptElement`}. */
		crossOrigin: null | (string & {});
		/** Valid for {@link HTMLImageElement|`HTMLImageElement`} and {@link HTMLMediaElement|`HTMLMediaElement`}. */
		readonly currentSrc: string;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		currentTime: number;
		/** Valid for {@link HTMLObjectElement|`HTMLObjectElement`}. */
		data: string;
		/** Valid for {@link HTMLOrSVGElement|`HTMLOrSVGElement`}. */
		readonly dataset: DOMStringMap;
		/** Valid for {@link HTMLModElement|`HTMLModElement`} and {@link HTMLTimeElement|`HTMLTimeElement`}. */
		dateTime: string;
		/** @deprecated Valid for {@link HTMLObjectElement|`HTMLObjectElement`}. */
		declare: boolean;
		/** Valid for {@link HTMLImageElement|`HTMLImageElement`}. */
		decoding: "async" | "sync" | "auto";
		/** Valid for {@link HTMLTrackElement|`HTMLTrackElement`}. */
		default: boolean;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}. */
		defaultChecked: boolean;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		defaultMuted: boolean;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		defaultPlaybackRate: number;
		/** Valid for {@link HTMLOptionElement|`HTMLOptionElement`}. */
		defaultSelected: boolean;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLOutputElement|`HTMLOutputElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		defaultValue: string;
		/** Valid for {@link HTMLScriptElement|`HTMLScriptElement`}. */
		defer: boolean;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		dirName: string;
		/** Valid for {@link HTMLVideoElement|`HTMLVideoElement`}. */
		disablePictureInPicture: boolean;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		disableRemotePlayback: boolean;
		/** Valid for {@link HTMLButtonElement|`HTMLButtonElement`}, {@link HTMLFieldSetElement|`HTMLFieldSetElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLLinkElement|`HTMLLinkElement`}, {@link HTMLOptGroupElement|`HTMLOptGroupElement`}, {@link HTMLOptionElement|`HTMLOptionElement`}, {@link HTMLSelectElement|`HTMLSelectElement`}, {@link HTMLStyleElement|`HTMLStyleElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		disabled: boolean;
		/** Valid for {@link HTMLAnchorElement|`HTMLAnchorElement`} and {@link HTMLAreaElement|`HTMLAreaElement`}. */
		download: string;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		readonly duration: number;
		/** Valid for {@link HTMLFieldSetElement|`HTMLFieldSetElement`} and {@link HTMLFormElement|`HTMLFormElement`}. */
		readonly elements: HTMLCollection | HTMLFormControlsCollection;
		/** Valid for {@link HTMLFormElement|`HTMLFormElement`}. */
		encoding: string;
		/** Valid for {@link HTMLFormElement|`HTMLFormElement`}. */
		enctype: string;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		readonly ended: boolean;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		readonly error: MediaError | null;
		/** @deprecated Valid for {@link HTMLScriptElement|`HTMLScriptElement`}. */
		event: string;
		/** Valid for {@link HTMLImageElement|`HTMLImageElement`}, {@link HTMLLinkElement|`HTMLLinkElement`} and {@link HTMLScriptElement|`HTMLScriptElement`}. */
		fetchPriority: string;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}. */
		files: FileList | null;
		/** Valid for {@link HTMLButtonElement|`HTMLButtonElement`}, {@link HTMLFieldSetElement|`HTMLFieldSetElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLLabelElement|`HTMLLabelElement`}, {@link HTMLLegendElement|`HTMLLegendElement`}, {@link HTMLObjectElement|`HTMLObjectElement`}, {@link HTMLOptionElement|`HTMLOptionElement`}, {@link HTMLOutputElement|`HTMLOutputElement`}, {@link HTMLSelectElement|`HTMLSelectElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		readonly form: HTMLFormElement | null;
		/** Valid for {@link HTMLButtonElement|`HTMLButtonElement`} and {@link HTMLInputElement|`HTMLInputElement`}. */
		formAction: string;
		/** Valid for {@link HTMLButtonElement|`HTMLButtonElement`} and {@link HTMLInputElement|`HTMLInputElement`}. */
		formEnctype: string;
		/** Valid for {@link HTMLButtonElement|`HTMLButtonElement`} and {@link HTMLInputElement|`HTMLInputElement`}. */
		formMethod: string;
		/** Valid for {@link HTMLButtonElement|`HTMLButtonElement`} and {@link HTMLInputElement|`HTMLInputElement`}. */
		formNoValidate: boolean;
		/** Valid for {@link HTMLButtonElement|`HTMLButtonElement`} and {@link HTMLInputElement|`HTMLInputElement`}. */
		formTarget: string;
		/** @deprecated Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		frame: string;
		/** @deprecated Valid for {@link HTMLIFrameElement|`HTMLIFrameElement`}. */
		frameBorder: string;
		/** Valid for {@link HTMLHyperlinkElementUtils|`HTMLHyperlinkElementUtils`}. */
		hash: string;
		/** Valid for {@link HTMLTableCellElement|`HTMLTableCellElement`}. */
		headers: string;
		/** Valid for {@link HTMLCanvasElement|`HTMLCanvasElement`}, {@link HTMLEmbedElement|`HTMLEmbedElement`}, {@link HTMLIFrameElement|`HTMLIFrameElement`}, {@link HTMLImageElement|`HTMLImageElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLObjectElement|`HTMLObjectElement`}, {@link HTMLSourceElement|`HTMLSourceElement`}, {@link HTMLTableCellElement|`HTMLTableCellElement`} and {@link HTMLVideoElement|`HTMLVideoElement`}. */
		height: number | string;
		/** Valid for {@link HTMLMeterElement|`HTMLMeterElement`}. */
		high: number;
		/** Valid for {@link HTMLHyperlinkElementUtils|`HTMLHyperlinkElementUtils`}. */
		host: string;
		/** Valid for {@link HTMLHyperlinkElementUtils|`HTMLHyperlinkElementUtils`}. */
		hostname: string;
		/** Valid for {@link HTMLBaseElement|`HTMLBaseElement`}, {@link HTMLHyperlinkElementUtils|`HTMLHyperlinkElementUtils`} and {@link HTMLLinkElement|`HTMLLinkElement`}. */
		href: string;
		/** Valid for {@link HTMLAnchorElement|`HTMLAnchorElement`} and {@link HTMLLinkElement|`HTMLLinkElement`}. */
		hreflang: string;
		/** @deprecated Valid for {@link HTMLImageElement|`HTMLImageElement`} and {@link HTMLObjectElement|`HTMLObjectElement`}. */
		hspace: number;
		/** Valid for {@link HTMLLabelElement|`HTMLLabelElement`}, {@link HTMLOutputElement|`HTMLOutputElement`} and {@link HTMLScriptElement|`HTMLScriptElement`}. */
		htmlFor: DOMTokenList | (string & {});
		/** Valid for {@link HTMLMetaElement|`HTMLMetaElement`}. */
		httpEquiv: string;
		/** Valid for {@link HTMLLinkElement|`HTMLLinkElement`}. */
		imageSizes: string;
		/** Valid for {@link HTMLLinkElement|`HTMLLinkElement`}. */
		imageSrcset: string;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}. */
		indeterminate: boolean;
		/** Valid for {@link HTMLOptionElement|`HTMLOptionElement`}. */
		readonly index: number;
		/** Valid for {@link HTMLLinkElement|`HTMLLinkElement`} and {@link HTMLScriptElement|`HTMLScriptElement`}. */
		integrity: string;
		/** Valid for {@link HTMLImageElement|`HTMLImageElement`}. */
		isMap: boolean;
		/** Valid for {@link HTMLTrackElement|`HTMLTrackElement`}. */
		kind: string;
		/** Valid for {@link HTMLOptGroupElement|`HTMLOptGroupElement`}, {@link HTMLOptionElement|`HTMLOptionElement`} and {@link HTMLTrackElement|`HTMLTrackElement`}. */
		label: string;
		/** Valid for {@link HTMLButtonElement|`HTMLButtonElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLMeterElement|`HTMLMeterElement`}, {@link HTMLOutputElement|`HTMLOutputElement`}, {@link HTMLProgressElement|`HTMLProgressElement`}, {@link HTMLSelectElement|`HTMLSelectElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		readonly labels: NodeListOf<HTMLLabelElement> | null;
		/** Valid for {@link HTMLFormElement|`HTMLFormElement`} and {@link HTMLSelectElement|`HTMLSelectElement`}. */
		length: number;
		/** @deprecated Valid for {@link HTMLBodyElement|`HTMLBodyElement`}. */
		link: string;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}. */
		readonly list: HTMLDataListElement | null;
		/** Valid for {@link HTMLIFrameElement|`HTMLIFrameElement`} and {@link HTMLImageElement|`HTMLImageElement`}. */
		loading: "eager" | "lazy" | (string & {});
		/** @deprecated Valid for {@link HTMLIFrameElement|`HTMLIFrameElement`} and {@link HTMLImageElement|`HTMLImageElement`}. */
		longDesc: string;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		loop: boolean;
		/** Valid for {@link HTMLMeterElement|`HTMLMeterElement`}. */
		low: number;
		/** @deprecated Valid for {@link HTMLImageElement|`HTMLImageElement`}. */
		lowsrc: string;
		/** @deprecated Valid for {@link HTMLIFrameElement|`HTMLIFrameElement`}. */
		marginHeight: string;
		/** @deprecated Valid for {@link HTMLIFrameElement|`HTMLIFrameElement`}. */
		marginWidth: string;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLMeterElement|`HTMLMeterElement`} and {@link HTMLProgressElement|`HTMLProgressElement`}. */
		max: string | number;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		maxLength: number;
		/** Valid for {@link HTMLLinkElement|`HTMLLinkElement`}, {@link HTMLMetaElement|`HTMLMetaElement`}, {@link HTMLSourceElement|`HTMLSourceElement`} and {@link HTMLStyleElement|`HTMLStyleElement`}. */
		media: string;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		readonly mediaKeys: MediaKeys | null;
		/** Valid for {@link HTMLFormElement|`HTMLFormElement`}. */
		method: string;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLMeterElement|`HTMLMeterElement`}. */
		min: string | number;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		minLength: number;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLSelectElement|`HTMLSelectElement`}. */
		multiple: boolean;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		muted: boolean;
		/** Valid for {@link HTMLAnchorElement|`HTMLAnchorElement`}, {@link HTMLButtonElement|`HTMLButtonElement`}, {@link HTMLDetailsElement|`HTMLDetailsElement`}, {@link HTMLEmbedElement|`HTMLEmbedElement`}, {@link HTMLFieldSetElement|`HTMLFieldSetElement`}, {@link HTMLFormElement|`HTMLFormElement`}, {@link HTMLIFrameElement|`HTMLIFrameElement`}, {@link HTMLImageElement|`HTMLImageElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLMapElement|`HTMLMapElement`}, {@link HTMLMetaElement|`HTMLMetaElement`}, {@link HTMLObjectElement|`HTMLObjectElement`}, {@link HTMLOutputElement|`HTMLOutputElement`}, {@link HTMLSelectElement|`HTMLSelectElement`}, {@link HTMLSlotElement|`HTMLSlotElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		name: string;
		/** Valid for {@link HTMLImageElement|`HTMLImageElement`}. */
		readonly naturalHeight: number;
		/** Valid for {@link HTMLImageElement|`HTMLImageElement`}. */
		readonly naturalWidth: number;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		readonly networkState: number;
		/** @deprecated Valid for {@link HTMLAreaElement|`HTMLAreaElement`}. */
		noHref: boolean;
		/** Valid for {@link HTMLScriptElement|`HTMLScriptElement`}. */
		noModule: boolean;
		/** @deprecated Valid for {@link HTMLHRElement|`HTMLHRElement`}. */
		noShade: boolean;
		/** Valid for {@link HTMLFormElement|`HTMLFormElement`}. */
		noValidate: boolean;
		/** @deprecated Valid for {@link HTMLTableCellElement|`HTMLTableCellElement`}. */
		noWrap: boolean;
		/** Valid for {@link HTMLOrSVGElement|`HTMLOrSVGElement`}. */
		nonce: string;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		onencrypted: ((this: HTMLMediaElement, ev: MediaEncryptedEvent) => any) | null;
		/** Valid for {@link HTMLVideoElement|`HTMLVideoElement`}. */
		onenterpictureinpicture: ((this: HTMLVideoElement, ev: Event) => any) | null;
		/** Valid for {@link HTMLVideoElement|`HTMLVideoElement`}. */
		onleavepictureinpicture: ((this: HTMLVideoElement, ev: Event) => any) | null;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		onwaitingforkey: ((this: HTMLMediaElement, ev: Event) => any) | null;
		/** Valid for {@link HTMLDetailsElement|`HTMLDetailsElement`} and {@link HTMLDialogElement|`HTMLDialogElement`}. */
		open: boolean;
		/** Valid for {@link HTMLMeterElement|`HTMLMeterElement`}. */
		optimum: number;
		/** Valid for {@link HTMLDataListElement|`HTMLDataListElement`} and {@link HTMLSelectElement|`HTMLSelectElement`}. */
		readonly options: HTMLCollectionOf<HTMLOptionElement> | HTMLOptionsCollection;
		/** Valid for {@link HTMLHyperlinkElementUtils|`HTMLHyperlinkElementUtils`}. */
		readonly origin: string;
		/** Valid for {@link HTMLHyperlinkElementUtils|`HTMLHyperlinkElementUtils`}. */
		password: string;
		/** Valid for {@link HTMLHyperlinkElementUtils|`HTMLHyperlinkElementUtils`}. */
		pathname: string;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}. */
		pattern: string;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		readonly paused: boolean;
		/** Valid for {@link HTMLAnchorElement|`HTMLAnchorElement`} and {@link HTMLAreaElement|`HTMLAreaElement`}. */
		ping: string;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		placeholder: string;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		playbackRate: number;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		readonly played: TimeRanges;
		/** Valid for {@link HTMLVideoElement|`HTMLVideoElement`}. */
		playsInline: boolean;
		/** Valid for {@link PopoverInvokerElement|`PopoverInvokerElement`}. */
		popoverTargetAction: string;
		/** Valid for {@link PopoverInvokerElement|`PopoverInvokerElement`}. */
		popoverTargetElement: Element | null;
		/** Valid for {@link HTMLHyperlinkElementUtils|`HTMLHyperlinkElementUtils`}. */
		port: string;
		/** Valid for {@link HTMLProgressElement|`HTMLProgressElement`}. */
		readonly position: number;
		/** Valid for {@link HTMLVideoElement|`HTMLVideoElement`}. */
		poster: string;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		preload: "none" | "metadata" | "auto" | "";
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		preservesPitch: boolean;
		/** Valid for {@link HTMLHyperlinkElementUtils|`HTMLHyperlinkElementUtils`}. */
		protocol: string;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		readOnly: boolean;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`} and {@link HTMLTrackElement|`HTMLTrackElement`}. */
		readonly readyState: number;
		/** Valid for {@link HTMLAnchorElement|`HTMLAnchorElement`}, {@link HTMLAreaElement|`HTMLAreaElement`}, {@link HTMLIFrameElement|`HTMLIFrameElement`}, {@link HTMLImageElement|`HTMLImageElement`}, {@link HTMLLinkElement|`HTMLLinkElement`} and {@link HTMLScriptElement|`HTMLScriptElement`}. */
		referrerPolicy: ReferrerPolicy | (string & {});
		/** Valid for {@link HTMLAnchorElement|`HTMLAnchorElement`}, {@link HTMLAreaElement|`HTMLAreaElement`}, {@link HTMLFormElement|`HTMLFormElement`} and {@link HTMLLinkElement|`HTMLLinkElement`}. */
		rel: string;
		/** Valid for {@link HTMLAnchorElement|`HTMLAnchorElement`}, {@link HTMLAreaElement|`HTMLAreaElement`}, {@link HTMLFormElement|`HTMLFormElement`} and {@link HTMLLinkElement|`HTMLLinkElement`}. */
		readonly relList: DOMTokenList;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		readonly remote: RemotePlayback;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLSelectElement|`HTMLSelectElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		required: boolean;
		/** Valid for {@link HTMLDialogElement|`HTMLDialogElement`}. */
		returnValue: string;
		/** @deprecated Valid for {@link HTMLAnchorElement|`HTMLAnchorElement`} and {@link HTMLLinkElement|`HTMLLinkElement`}. */
		rev: string;
		/** Valid for {@link HTMLOListElement|`HTMLOListElement`}. */
		reversed: boolean;
		/** Valid for {@link HTMLTableRowElement|`HTMLTableRowElement`}. */
		readonly rowIndex: number;
		/** Valid for {@link HTMLTableCellElement|`HTMLTableCellElement`}. */
		rowSpan: number;
		/** Valid for {@link HTMLTableElement|`HTMLTableElement`}, {@link HTMLTableSectionElement|`HTMLTableSectionElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		rows: HTMLCollectionOf<HTMLTableRowElement> | number;
		/** @deprecated Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		rules: string;
		/** Valid for {@link HTMLIFrameElement|`HTMLIFrameElement`}. */
		readonly sandbox: DOMTokenList;
		/** @deprecated Valid for {@link HTMLMetaElement|`HTMLMetaElement`}. */
		scheme: string;
		/** Valid for {@link HTMLTableCellElement|`HTMLTableCellElement`}. */
		scope: string;
		/** @deprecated Valid for {@link HTMLIFrameElement|`HTMLIFrameElement`}. */
		scrolling: string;
		/** Valid for {@link HTMLHyperlinkElementUtils|`HTMLHyperlinkElementUtils`}. */
		search: string;
		/** Valid for {@link HTMLTableRowElement|`HTMLTableRowElement`}. */
		readonly sectionRowIndex: number;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		readonly seekable: TimeRanges;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		readonly seeking: boolean;
		/** Valid for {@link HTMLOptionElement|`HTMLOptionElement`}. */
		selected: boolean;
		/** Valid for {@link HTMLSelectElement|`HTMLSelectElement`}. */
		selectedIndex: number;
		/** Valid for {@link HTMLSelectElement|`HTMLSelectElement`}. */
		readonly selectedOptions: HTMLCollectionOf<HTMLOptionElement>;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		selectionDirection: "forward" | "backward" | "none" | null;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		selectionEnd: number | null;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		selectionStart: number | null;
		/** Valid for {@link HTMLTemplateElement|`HTMLTemplateElement`}. */
		shadowRootClonable: boolean;
		/** Valid for {@link HTMLTemplateElement|`HTMLTemplateElement`}. */
		shadowRootDelegatesFocus: boolean;
		/** Valid for {@link HTMLTemplateElement|`HTMLTemplateElement`}. */
		shadowRootMode: string;
		/** Valid for {@link HTMLTemplateElement|`HTMLTemplateElement`}. */
		shadowRootSerializable: boolean;
		/** Valid for {@link HTMLAnchorElement|`HTMLAnchorElement`} and {@link HTMLAreaElement|`HTMLAreaElement`}. */
		shape: string;
		/** Valid for {@link LinkStyle|`LinkStyle`}. */
		readonly sheet: CSSStyleSheet | null;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		readonly sinkId: string;
		/** Valid for {@link HTMLHRElement|`HTMLHRElement`}, {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLSelectElement|`HTMLSelectElement`}. */
		size: string | number;
		/** Valid for {@link HTMLImageElement|`HTMLImageElement`}, {@link HTMLLinkElement|`HTMLLinkElement`} and {@link HTMLSourceElement|`HTMLSourceElement`}. */
		sizes: DOMTokenList | (string & {});
		/** Valid for {@link HTMLTableColElement|`HTMLTableColElement`}. */
		span: number;
		/** Valid for {@link HTMLEmbedElement|`HTMLEmbedElement`}, {@link HTMLIFrameElement|`HTMLIFrameElement`}, {@link HTMLImageElement|`HTMLImageElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLMediaElement|`HTMLMediaElement`}, {@link HTMLScriptElement|`HTMLScriptElement`}, {@link HTMLSourceElement|`HTMLSourceElement`} and {@link HTMLTrackElement|`HTMLTrackElement`}. */
		src: string;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		srcObject: MediaProvider | null;
		/** Valid for {@link HTMLIFrameElement|`HTMLIFrameElement`}. */
		srcdoc: string;
		/** Valid for {@link HTMLTrackElement|`HTMLTrackElement`}. */
		srclang: string;
		/** Valid for {@link HTMLImageElement|`HTMLImageElement`} and {@link HTMLSourceElement|`HTMLSourceElement`}. */
		srcset: string;
		/** @deprecated Valid for {@link HTMLObjectElement|`HTMLObjectElement`}. */
		standby: string;
		/** Valid for {@link HTMLOListElement|`HTMLOListElement`}. */
		start: number;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}. */
		step: string;
		/** @deprecated Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		summary: string;
		/** Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		readonly tBodies: HTMLCollectionOf<HTMLTableSectionElement>;
		/** Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		tFoot: HTMLTableSectionElement | null;
		/** Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		tHead: HTMLTableSectionElement | null;
		/** Valid for {@link HTMLOrSVGElement|`HTMLOrSVGElement`}. */
		tabIndex: number;
		/** Valid for {@link HTMLAnchorElement|`HTMLAnchorElement`}, {@link HTMLAreaElement|`HTMLAreaElement`}, {@link HTMLBaseElement|`HTMLBaseElement`}, {@link HTMLFormElement|`HTMLFormElement`} and {@link HTMLLinkElement|`HTMLLinkElement`}. */
		target: string;
		/** Valid for {@link HTMLAnchorElement|`HTMLAnchorElement`}, {@link HTMLBodyElement|`HTMLBodyElement`}, {@link HTMLOptionElement|`HTMLOptionElement`}, {@link HTMLScriptElement|`HTMLScriptElement`} and {@link HTMLTitleElement|`HTMLTitleElement`}. */
		text: string;
		/** Valid for {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		readonly textLength: number;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		readonly textTracks: TextTrackList;
		/** Valid for {@link HTMLTrackElement|`HTMLTrackElement`}. */
		readonly track: TextTrack;
		/** Valid for {@link HTMLAnchorElement|`HTMLAnchorElement`}, {@link HTMLButtonElement|`HTMLButtonElement`}, {@link HTMLEmbedElement|`HTMLEmbedElement`}, {@link HTMLFieldSetElement|`HTMLFieldSetElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLLIElement|`HTMLLIElement`}, {@link HTMLLinkElement|`HTMLLinkElement`}, {@link HTMLOListElement|`HTMLOListElement`}, {@link HTMLObjectElement|`HTMLObjectElement`}, {@link HTMLOutputElement|`HTMLOutputElement`}, {@link HTMLScriptElement|`HTMLScriptElement`}, {@link HTMLSelectElement|`HTMLSelectElement`}, {@link HTMLSourceElement|`HTMLSourceElement`}, {@link HTMLStyleElement|`HTMLStyleElement`}, {@link HTMLTextAreaElement|`HTMLTextAreaElement`} and {@link HTMLUListElement|`HTMLUListElement`}. */
		type: "submit" | "reset" | "button" | "select-one" | "select-multiple" | (string & {});
		/** Valid for {@link HTMLImageElement|`HTMLImageElement`}, {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLObjectElement|`HTMLObjectElement`}. */
		useMap: string;
		/** Valid for {@link HTMLHyperlinkElementUtils|`HTMLHyperlinkElementUtils`}. */
		username: string;
		/** @deprecated Valid for {@link HTMLTableCellElement|`HTMLTableCellElement`}, {@link HTMLTableColElement|`HTMLTableColElement`}, {@link HTMLTableRowElement|`HTMLTableRowElement`} and {@link HTMLTableSectionElement|`HTMLTableSectionElement`}. */
		vAlign: string;
		/** @deprecated Valid for {@link HTMLBodyElement|`HTMLBodyElement`}. */
		vLink: string;
		/** Valid for {@link HTMLButtonElement|`HTMLButtonElement`}, {@link HTMLFieldSetElement|`HTMLFieldSetElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLObjectElement|`HTMLObjectElement`}, {@link HTMLOutputElement|`HTMLOutputElement`}, {@link HTMLSelectElement|`HTMLSelectElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		readonly validationMessage: string;
		/** Valid for {@link HTMLButtonElement|`HTMLButtonElement`}, {@link HTMLFieldSetElement|`HTMLFieldSetElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLObjectElement|`HTMLObjectElement`}, {@link HTMLOutputElement|`HTMLOutputElement`}, {@link HTMLSelectElement|`HTMLSelectElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		readonly validity: ValidityState;
		/** Valid for {@link HTMLButtonElement|`HTMLButtonElement`}, {@link HTMLDataElement|`HTMLDataElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLLIElement|`HTMLLIElement`}, {@link HTMLMeterElement|`HTMLMeterElement`}, {@link HTMLOptionElement|`HTMLOptionElement`}, {@link HTMLOutputElement|`HTMLOutputElement`}, {@link HTMLProgressElement|`HTMLProgressElement`}, {@link HTMLSelectElement|`HTMLSelectElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		value: string | number;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}. */
		valueAsDate: Date | null;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}. */
		valueAsNumber: number;
		/** @deprecated Valid for {@link HTMLHtmlElement|`HTMLHtmlElement`}. */
		version: string;
		/** Valid for {@link HTMLVideoElement|`HTMLVideoElement`}. */
		readonly videoHeight: number;
		/** Valid for {@link HTMLVideoElement|`HTMLVideoElement`}. */
		readonly videoWidth: number;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		volume: number;
		/** @deprecated Valid for {@link HTMLImageElement|`HTMLImageElement`} and {@link HTMLObjectElement|`HTMLObjectElement`}. */
		vspace: number;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}. */
		readonly webkitEntries: ReadonlyArray<FileSystemEntry>;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}. */
		webkitdirectory: boolean;
		/** Valid for {@link HTMLCanvasElement|`HTMLCanvasElement`}, {@link HTMLEmbedElement|`HTMLEmbedElement`}, {@link HTMLHRElement|`HTMLHRElement`}, {@link HTMLIFrameElement|`HTMLIFrameElement`}, {@link HTMLImageElement|`HTMLImageElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLObjectElement|`HTMLObjectElement`}, {@link HTMLPreElement|`HTMLPreElement`}, {@link HTMLSourceElement|`HTMLSourceElement`}, {@link HTMLTableCellElement|`HTMLTableCellElement`}, {@link HTMLTableColElement|`HTMLTableColElement`}, {@link HTMLTableElement|`HTMLTableElement`} and {@link HTMLVideoElement|`HTMLVideoElement`}. */
		width: number | string;
		/** Valid for {@link HTMLButtonElement|`HTMLButtonElement`}, {@link HTMLFieldSetElement|`HTMLFieldSetElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLObjectElement|`HTMLObjectElement`}, {@link HTMLOutputElement|`HTMLOutputElement`}, {@link HTMLSelectElement|`HTMLSelectElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		readonly willValidate: boolean;
		/** Valid for {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		wrap: string;
		/** Valid for {@link HTMLImageElement|`HTMLImageElement`}. */
		readonly x: number;
		/** Valid for {@link HTMLImageElement|`HTMLImageElement`}. */
		readonly y: number;
		/** Valid for {@link HTMLSelectElement|`HTMLSelectElement`}. */
		add(element: HTMLOptionElement | HTMLOptGroupElement, before?: HTMLElement | number | null): void;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		addTextTrack(kind: TextTrackKind, label?: string, language?: string): TextTrack;
		/** Valid for {@link HTMLSlotElement|`HTMLSlotElement`}. */
		assign(...nodes: (Element | Text)[]): void;
		/** Valid for {@link HTMLSlotElement|`HTMLSlotElement`}. */
		assignedElements(options?: AssignedNodesOptions): Element[];
		/** Valid for {@link HTMLSlotElement|`HTMLSlotElement`}. */
		assignedNodes(options?: AssignedNodesOptions): Node[];
		/** Valid for {@link HTMLOrSVGElement|`HTMLOrSVGElement`}. */
		blur(): void;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		canPlayType(type: string): CanPlayTypeResult;
		/** Valid for {@link HTMLVideoElement|`HTMLVideoElement`}. */
		cancelVideoFrameCallback(handle: number): void;
		/** Valid for {@link HTMLCanvasElement|`HTMLCanvasElement`}. */
		captureStream(frameRequestRate?: number): MediaStream;
		/** Valid for {@link HTMLButtonElement|`HTMLButtonElement`}, {@link HTMLFieldSetElement|`HTMLFieldSetElement`}, {@link HTMLFormElement|`HTMLFormElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLObjectElement|`HTMLObjectElement`}, {@link HTMLOutputElement|`HTMLOutputElement`}, {@link HTMLSelectElement|`HTMLSelectElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		checkValidity(): boolean;
		/** Valid for {@link HTMLDialogElement|`HTMLDialogElement`}. */
		close(returnValue?: string): void;
		/** Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		createCaption(): HTMLTableCaptionElement;
		/** Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		createTBody(): HTMLTableSectionElement;
		/** Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		createTFoot(): HTMLTableSectionElement;
		/** Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		createTHead(): HTMLTableSectionElement;
		/** Valid for {@link HTMLImageElement|`HTMLImageElement`}. */
		decode(): Promise<void>;
		/** Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		deleteCaption(): void;
		/** Valid for {@link HTMLTableRowElement|`HTMLTableRowElement`}. */
		deleteCell(index: number): void;
		/** Valid for {@link HTMLTableElement|`HTMLTableElement`} and {@link HTMLTableSectionElement|`HTMLTableSectionElement`}. */
		deleteRow(index: number): void;
		/** Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		deleteTFoot(): void;
		/** Valid for {@link HTMLTableElement|`HTMLTableElement`}. */
		deleteTHead(): void;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		fastSeek(time: number): void;
		/** Valid for {@link HTMLOrSVGElement|`HTMLOrSVGElement`}. */
		focus(options?: FocusOptions): void;
		/** Valid for {@link HTMLCanvasElement|`HTMLCanvasElement`}. */
		getContext(contextId: "2d", options?: CanvasRenderingContext2DSettings): CanvasRenderingContext2D | null;
		getContext(contextId: "bitmaprenderer", options?: ImageBitmapRenderingContextSettings): ImageBitmapRenderingContext | null;
		getContext(contextId: "webgl", options?: WebGLContextAttributes): WebGLRenderingContext | null;
		getContext(contextId: "webgl2", options?: WebGLContextAttributes): WebGL2RenderingContext | null;
		getContext(contextId: string, options?: any): RenderingContext | null;
		/** Valid for {@link HTMLEmbedElement|`HTMLEmbedElement`}, {@link HTMLIFrameElement|`HTMLIFrameElement`} and {@link HTMLObjectElement|`HTMLObjectElement`}. */
		getSVGDocument(): Document | null;
		/** Valid for {@link HTMLVideoElement|`HTMLVideoElement`}. */
		getVideoPlaybackQuality(): VideoPlaybackQuality;
		/** Valid for {@link HTMLTableRowElement|`HTMLTableRowElement`}. */
		insertCell(index?: number): HTMLTableCellElement;
		/** Valid for {@link HTMLTableElement|`HTMLTableElement`} and {@link HTMLTableSectionElement|`HTMLTableSectionElement`}. */
		insertRow(index?: number): HTMLTableRowElement;
		/** Valid for {@link HTMLSelectElement|`HTMLSelectElement`}. */
		item(index: number): HTMLOptionElement | null;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		load(): void;
		/** Valid for {@link HTMLSelectElement|`HTMLSelectElement`}. */
		namedItem(name: string): HTMLOptionElement | null;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		pause(): void;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		play(): Promise<void>;
		/** Valid for {@link HTMLSelectElement|`HTMLSelectElement`}. */
		remove(): void;
		remove(index: number): void;
		/** Valid for {@link HTMLButtonElement|`HTMLButtonElement`}, {@link HTMLFieldSetElement|`HTMLFieldSetElement`}, {@link HTMLFormElement|`HTMLFormElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLObjectElement|`HTMLObjectElement`}, {@link HTMLOutputElement|`HTMLOutputElement`}, {@link HTMLSelectElement|`HTMLSelectElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		reportValidity(): boolean;
		/** Valid for {@link HTMLVideoElement|`HTMLVideoElement`}. */
		requestPictureInPicture(): Promise<PictureInPictureWindow>;
		/** Valid for {@link HTMLFormElement|`HTMLFormElement`}. */
		requestSubmit(submitter?: HTMLElement | null): void;
		/** Valid for {@link HTMLVideoElement|`HTMLVideoElement`}. */
		requestVideoFrameCallback(callback: VideoFrameRequestCallback): number;
		/** Valid for {@link HTMLFormElement|`HTMLFormElement`}. */
		reset(): void;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		select(): void;
		/** Valid for {@link HTMLButtonElement|`HTMLButtonElement`}, {@link HTMLFieldSetElement|`HTMLFieldSetElement`}, {@link HTMLInputElement|`HTMLInputElement`}, {@link HTMLObjectElement|`HTMLObjectElement`}, {@link HTMLOutputElement|`HTMLOutputElement`}, {@link HTMLSelectElement|`HTMLSelectElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		setCustomValidity(error: string): void;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		setMediaKeys(mediaKeys: MediaKeys | null): Promise<void>;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		setRangeText(replacement: string): void;
		setRangeText(replacement: string, start: number, end: number, selectionMode?: SelectionMode): void;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLTextAreaElement|`HTMLTextAreaElement`}. */
		setSelectionRange(start: number | null, end: number | null, direction?: "forward" | "backward" | "none"): void;
		/** Valid for {@link HTMLMediaElement|`HTMLMediaElement`}. */
		setSinkId(sinkId: string): Promise<void>;
		/** Valid for {@link HTMLDialogElement|`HTMLDialogElement`}. */
		show(): void;
		/** Valid for {@link HTMLDialogElement|`HTMLDialogElement`}. */
		showModal(): void;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`} and {@link HTMLSelectElement|`HTMLSelectElement`}. */
		showPicker(): void;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}. */
		stepDown(n?: number): void;
		/** Valid for {@link HTMLInputElement|`HTMLInputElement`}. */
		stepUp(n?: number): void;
		/** Valid for {@link HTMLFormElement|`HTMLFormElement`}. */
		submit(): void;
		/** Valid for {@link HTMLCanvasElement|`HTMLCanvasElement`}. */
		toBlob(callback: BlobCallback, type?: string, quality?: any): void;
		/** Valid for {@link HTMLCanvasElement|`HTMLCanvasElement`}. */
		toDataURL(type?: string, quality?: any): string;
		/** Valid for {@link HTMLHyperlinkElementUtils|`HTMLHyperlinkElementUtils`}. */
		toString(): string;
		/** Valid for {@link HTMLCanvasElement|`HTMLCanvasElement`}. */
		transferControlToOffscreen(): OffscreenCanvas;
		[name: number]: HTMLOptionElement | HTMLOptGroupElement;
		[Symbol.iterator](): IterableIterator<HTMLOptionElement>;
	}
}
